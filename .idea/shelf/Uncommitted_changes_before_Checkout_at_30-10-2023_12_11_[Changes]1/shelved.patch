Index: app/src/main/res/layout/activity_consultation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:theme=\"@style/Theme.AppCompat.Light\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Consultation\">\r\n\r\n    <androidx.appcompat.widget.LinearLayoutCompat\r\n        android:orientation=\"vertical\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <androidx.fragment.app.FragmentContainerView\r\n            android:id=\"@+id/fragmentContainerView\"\r\n            android:name=\"androidx.navigation.fragment.NavHostFragment\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:defaultNavHost=\"true\"\r\n            app:navGraph=\"@navigation/consultationform_graph\" />\r\n\r\n    </androidx.appcompat.widget.LinearLayoutCompat>\r\n</ScrollView>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_consultation.xml b/app/src/main/res/layout/activity_consultation.xml
--- a/app/src/main/res/layout/activity_consultation.xml	
+++ b/app/src/main/res/layout/activity_consultation.xml	
@@ -2,15 +2,15 @@
 <ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
-    android:theme="@style/Theme.AppCompat.Light"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    android:theme="@style/Theme.AppCompat.Light"
     tools:context=".Consultation">
 
     <androidx.appcompat.widget.LinearLayoutCompat
-        android:orientation="vertical"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content">
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
 
         <androidx.fragment.app.FragmentContainerView
             android:id="@+id/fragmentContainerView"
Index: app/src/main/java/com/example/infits/connectingDietitian.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.cardview.widget.CardView;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.infits.R;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class connectingDietitian extends AppCompatActivity {\r\n    EditText verify_code;\r\n    ProgressBar progressBar;\r\n    TextView name,age_gender,email,mobile,dietitian_details;\r\n    Button discard,connect,verify;\r\n    CardView cardView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_connecting_dietitian);\r\n        verify = findViewById(R.id.button5Connect);\r\n        cardView = findViewById(R.id.card70);\r\n        discard = findViewById(R.id.button3);\r\n        connect = findViewById(R.id.button4);\r\n        verify_code = findViewById(R.id.verify);\r\n        progressBar = findViewById(R.id.connectWithDietitianProgress);\r\n        dietitian_details = findViewById(R.id.textView2);\r\n        name = findViewById(R.id.textViewName);\r\n        age_gender = findViewById(R.id.textView5);\r\n        email = findViewById(R.id.textView3);\r\n        mobile = findViewById(R.id.textView4);\r\n        verify.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                fetchDataFromPhpFile();\r\n            }\r\n        });\r\n        connect.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dietitianUpdate();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void fetchDataFromPhpFile() {\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format(\"%sverify_1.php\",DataFromDatabase.ipConfig),\r\n                response->{\r\n            progressBar.setVisibility(View.INVISIBLE);\r\n                    Toast.makeText(connectingDietitian.this,response,Toast.LENGTH_SHORT).show();\r\n                    try {\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        JSONArray jsonArray = new JSONArray(jsonObject.getString(\"data\"));\r\n                        JSONObject jsonObjectData = jsonArray.getJSONObject(0);\r\n                        dietitian_details.setVisibility(View.VISIBLE);\r\n                        cardView.setVisibility(View.VISIBLE);\r\n                        discard.setVisibility(View.VISIBLE);\r\n                        connect.setVisibility(View.VISIBLE);\r\n                        name.setText(jsonObjectData.getString(\"name\"));\r\n                        age_gender.setText(jsonObjectData.getString(\"age\")+\" |\"+jsonObjectData.getString(\"gender\"));\r\n                        email.setText(jsonObjectData.getString(\"email\"));\r\n                        mobile.setText(jsonObjectData.getString(\"mobile\"));\r\n\r\n                    } catch (Exception e) {\r\n                        Toast.makeText(connectingDietitian.this,e.toString(),Toast.LENGTH_SHORT).show();\r\n                    }\r\n                },error->{\r\n            progressBar.setVisibility(View.INVISIBLE);\r\n            Toast.makeText(connectingDietitian.this,error.toString(),Toast.LENGTH_SHORT).show();\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"dietitian_verify_code\",verify_code.getText().toString().trim());\r\n                data.put(\"type\",\"2\");\r\n                return data;\r\n            }\r\n        };\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        Volley.newRequestQueue(connectingDietitian.this).add(stringRequest);\r\n    }\r\n    private void dietitianUpdate(){\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format(\"%sdietitianUpdated_1.php\",DataFromDatabase.ipConfig),\r\n                response->{\r\n                    progressBar.setVisibility(View.INVISIBLE);\r\n\r\n                    try {\r\n                        if (response.equals(\"Updated\")){\r\n                            SharedPreferences loginDetails = getSharedPreferences(\"loginDetails\",MODE_PRIVATE);\r\n                            SharedPreferences.Editor editor = loginDetails.edit();\r\n                            editor.putString(\"verification\",\"1\");\r\n                            editor.apply();\r\n                            DataFromDatabase.verification = \"1\";\r\n                            startActivity(new Intent(connectingDietitian.this,Consultation.class));\r\n                            finish();\r\n                            Toast.makeText(connectingDietitian.this,\"Updated\",Toast.LENGTH_SHORT).show();\r\n                        }else {\r\n                            Toast.makeText(connectingDietitian.this,response,Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                    } catch (Exception e) {\r\n                        Toast.makeText(connectingDietitian.this,e.toString(),Toast.LENGTH_SHORT).show();\r\n                    }\r\n                },error->{\r\n            progressBar.setVisibility(View.INVISIBLE);\r\n            Toast.makeText(connectingDietitian.this,error.toString(),Toast.LENGTH_SHORT).show();\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"clientuserID\",DataFromDatabase.clientuserID);\r\n                data.put(\"verification\",\"1\");\r\n                data.put(\"type\",\"2\");\r\n                return data;\r\n            }\r\n        };\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        Volley.newRequestQueue(connectingDietitian.this).add(stringRequest);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/connectingDietitian.java b/app/src/main/java/com/example/infits/connectingDietitian.java
--- a/app/src/main/java/com/example/infits/connectingDietitian.java	
+++ b/app/src/main/java/com/example/infits/connectingDietitian.java	
@@ -1,34 +1,26 @@
 package com.example.infits;
 
-import androidx.annotation.Nullable;
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.cardview.widget.CardView;
-
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.View;
-import android.view.WindowManager;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.cardview.widget.CardView;
+
 import com.android.volley.AuthFailureError;
 import com.android.volley.DefaultRetryPolicy;
 import com.android.volley.Request;
-import com.android.volley.RequestQueue;
-import com.android.volley.Response;
-import com.android.volley.VolleyError;
-import com.android.volley.toolbox.JsonObjectRequest;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
-import com.example.infits.R;
 
 import org.json.JSONArray;
-import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.util.HashMap;
@@ -37,7 +29,7 @@
 public class connectingDietitian extends AppCompatActivity {
     EditText verify_code;
     ProgressBar progressBar;
-    TextView name,age_gender,email,mobile,dietitian_details;
+    TextView name,age_gender,email,mobile,dietitian_details,description;
     Button discard,connect,verify;
     CardView cardView;
 
@@ -51,6 +43,7 @@
         connect = findViewById(R.id.button4);
         verify_code = findViewById(R.id.verify);
         progressBar = findViewById(R.id.connectWithDietitianProgress);
+        description = findViewById(R.id.textView);
         dietitian_details = findViewById(R.id.textView2);
         name = findViewById(R.id.textViewName);
         age_gender = findViewById(R.id.textView5);
@@ -68,11 +61,25 @@
                 dietitianUpdate();
             }
         });
+
+        discard.setOnClickListener(new View.OnClickListener(){
+            @Override
+            public void onClick(View view){
+                dietitian_details.setVisibility(View.INVISIBLE);
+                cardView.setVisibility(View.INVISIBLE);
+                discard.setVisibility(View.INVISIBLE);
+                connect.setVisibility(View.INVISIBLE);
+                verify_code.setText(null);
+                verify.setVisibility(View.VISIBLE);
+                verify_code.setVisibility(View.VISIBLE);
+                description.setVisibility(View.VISIBLE);
+            }
+        });
     }
 
     private void fetchDataFromPhpFile() {
         progressBar.setVisibility(View.VISIBLE);
-        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format("%sverify_1.php",DataFromDatabase.ipConfig),
+        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format("%sverify.php",DataFromDatabase.ipConfig),
                 response->{
             progressBar.setVisibility(View.INVISIBLE);
                     Toast.makeText(connectingDietitian.this,response,Toast.LENGTH_SHORT).show();
@@ -84,6 +91,9 @@
                         cardView.setVisibility(View.VISIBLE);
                         discard.setVisibility(View.VISIBLE);
                         connect.setVisibility(View.VISIBLE);
+                        verify.setVisibility(View.INVISIBLE);
+                        verify_code.setVisibility(View.INVISIBLE);
+                        description.setVisibility(View.INVISIBLE);
                         name.setText(jsonObjectData.getString("name"));
                         age_gender.setText(jsonObjectData.getString("age")+" |"+jsonObjectData.getString("gender"));
                         email.setText(jsonObjectData.getString("email"));
@@ -112,7 +122,7 @@
     }
     private void dietitianUpdate(){
         progressBar.setVisibility(View.VISIBLE);
-        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format("%sdietitianUpdated_1.php",DataFromDatabase.ipConfig),
+        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format("%sdietitianUpdated.php",DataFromDatabase.ipConfig),
                 response->{
                     progressBar.setVisibility(View.INVISIBLE);
 
@@ -123,7 +133,7 @@
                             editor.putString("verification","1");
                             editor.apply();
                             DataFromDatabase.verification = "1";
-                            startActivity(new Intent(connectingDietitian.this,Consultation.class));
+                            startActivity(new Intent(connectingDietitian.this, Subscription1.class));
                             finish();
                             Toast.makeText(connectingDietitian.this,"Updated",Toast.LENGTH_SHORT).show();
                         }else {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2aac381d-1e75-4f05-95d2-1f36e0826556\" name=\"Changes\" comment=\"Created new dialog box for water tracker\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardMain.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardMain.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DataFromDatabase.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DataFromDatabase.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/connectingDietitian.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/connectingDietitian.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_connecting_dietitian.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_connecting_dietitian.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_consultation.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_consultation.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_water_tracker.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_water_tracker.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/watergoaldialog.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/watergoaldialog.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"CodeInsightWorkspaceSettings\">\r\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[C:\\Users\\Gordon\\.android\\avd\\Nexus_4_API_23.avd]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$/app\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Infits\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Infits\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Infits\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Infits\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"other\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"resourceFile\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"navigationResourceFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"aditya\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"AdityaGond\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2SZdxqVpDNjD8yULKFzrqaMJSUE\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"autoscrollToSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Git.Branch.Popup.ShowAllRemotes&quot;: &quot;true&quot;,\r\n    &quot;PROJECT_TRUSTED_KEY&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;ScreenshotViewer.SavePath&quot;: &quot;E:/INFITS PROJECTS/Screenshots&quot;,\r\n    &quot;ToolWindowRunning Devices.ShowToolbar&quot;: &quot;false&quot;,\r\n    &quot;WORKMANAGER_INSPECTOR_NOTIFICATION_DISMISSED&quot;: &quot;true&quot;,\r\n    &quot;android-custom-viewC:/Users/Gordon/AppData/Local/Android/Sdk/sources/android-33/android/widget/CompoundButton.java_SELECTED&quot;: &quot;CompoundButton&quot;,\r\n    &quot;android-custom-viewC:/Users/devab/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.5.4/5404b0f8aeccb2fe882bee99ef8843711c01c156/fragment-1.5.4-sources.jar!/androidx/fragment/app/FragmentContainerView.kt_SELECTED&quot;: &quot;FragmentContainerView&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;com.android.tools.idea.streaming.emulator.zoom.toolbar.visible&quot;: &quot;false&quot;,\r\n    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,\r\n    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,\r\n    &quot;full.screen.before.presentation.mode&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;devabrath&quot;,\r\n    &quot;last_directory_selection&quot;: &quot;E:/internship/INFITS_CLIENT_APP/app/src/main/res/drawable&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Aditya/Clone Repo/INFITS_CLIENT_APP&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Suggestions&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.17&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.new.ui&quot;,\r\n    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;\r\n  }\r\n}</component>\r\n  <component name=\"PsdUISettings\">\r\n    <option name=\"MODULE_TAB\" value=\"Properties\" />\r\n    <option name=\"LAST_EDITED_SIGNING_CONFIG\" value=\"debug\" />\r\n    <option name=\"LAST_EDITED_BUILD_TYPE\" value=\"release\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\INFITS PROJECTS\\INFITS_CLIENT_APP\\app\\src\\main\\java\\com\\example\\infits\" />\r\n      <recent name=\"D:\\Internship\\infits_project\\app\\src\\main\\res\\layout\" />\r\n      <recent name=\"D:\\Internship\\infits_project\\app\\src\\main\\res\\drawable\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\">\r\n      <module name=\"Infits.app.main\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"INSPECTION_WITHOUT_ACTIVITY_RESTART\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"$USER_HOME$/.jdks/openjdk-20.0.1\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <module name=\"Infits.app\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2aac381d-1e75-4f05-95d2-1f36e0826556\" name=\"Changes\" comment=\"MealtrackerTodays_Breakfast.java-modified\" />\r\n      <created>1689358288903</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1689358288903</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Created new dialog box for water tracker\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Created new dialog box for water tracker\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/NotificationReceiver.java</url>\r\n          <line>188</line>\r\n          <properties class=\"com.example.infits.NotificationReceiver\" method=\"sleep\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java</url>\r\n          <line>108</line>\r\n          <properties class=\"com.example.infits.SleepReminderFragment\" method=\"setFields\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"9\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java</url>\r\n          <line>265</line>\r\n          <properties class=\"com.example.infits.SleepReminderFragment\" method=\"setAlarm\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"10\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java</url>\r\n          <line>176</line>\r\n          <properties class=\"com.example.infits.SleepReminderFragment\" method=\"showTimePicker\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"11\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java</url>\r\n          <line>319</line>\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java</url>\r\n          <line>56</line>\r\n          <option name=\"timeStamp\" value=\"6\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java</url>\r\n          <line>70</line>\r\n          <option name=\"timeStamp\" value=\"7\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java</url>\r\n          <line>287</line>\r\n          <option name=\"timeStamp\" value=\"16\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-field\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java</url>\r\n          <line>40</line>\r\n          <properties field=\"timeDiffOnce\" class=\"com.example.infits.SleepReminderFragment\" />\r\n          <option name=\"timeStamp\" value=\"14\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -10,17 +10,12 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="2aac381d-1e75-4f05-95d2-1f36e0826556" name="Changes" comment="Created new dialog box for water tracker">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardFragment.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardMain.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DataFromDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DataFromDatabase.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/connectingDietitian.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/connectingDietitian.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/activity_connecting_dietitian.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/activity_connecting_dietitian.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/activity_consultation.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/activity_consultation.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_water_tracker.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_water_tracker.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/watergoaldialog.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/watergoaldialog.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -247,6 +242,14 @@
       <option name="presentableId" value="Default" />
       <updated>1689358288903</updated>
     </task>
+    <task id="LOCAL-00001" summary="Created new dialog box for water tracker">
+      <created>1698645841765</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1698645841765</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
Index: app/src/main/java/com/example/infits/DashBoardFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\nimport static com.example.infits.StepTrackerFragment.goalVal;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.preference.PreferenceManager;\r\nimport android.text.Html;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.work.ExistingPeriodicWorkPolicy;\r\nimport androidx.work.PeriodicWorkRequest;\r\nimport androidx.work.WorkManager;\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.concurrent.TimeUnit;\r\npublic class DashBoardFragment extends Fragment {\r\n\r\n    //String urlRefer = String.format(\"%sverify.php\",DataFromDatabase.ipConfig);\r\n    String urlRefer = \"https://infits.in/androidApi/verify.php\";\r\n\r\n\r\n    String Entered;\r\n    SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd H:m:S\", Locale.getDefault());\r\n\r\n    SimpleDateFormat caloriedateFormat = new SimpleDateFormat(\"yyyy-MM-dd H:m:S\", Locale.getDefault());\r\n\r\n\r\n    String url = String.format(\"%sdashboard.php\",DataFromDatabase.ipConfig);\r\n    //String url = \"https://infits.in/androidApi/dashboard.php\";\r\n\r\n\r\n    // String url = String.format(\"%sDashboard.php\",DataFromDatabase.ipConfig);\r\n    //String url1 = String.format(\"%sgetDietitianDetail.php\", DataFromDatabase.ipConfig);\r\n    String url1 = \"https://infits.in/androidApi/getDietitianDetail.php\";\r\n    //String url1 = \"https://infits.in/androidApi/getDietitianDetail.php\";\r\n\r\n    //No such file!\r\n    // String url1 = String.format(\"%sprofilePicture.php\", DataFromDatabase.ipConfig);\r\n\r\n    TextView stepstv;\r\n    TextView glassestv;\r\n    TextView glassesGoaltv;\r\n    TextView sleeptv;\r\n    TextView sleepGoaltv;\r\n    TextView weighttv;\r\n    TextView weightGoaltv;\r\n    TextView calorietv;\r\n    TextView calorieGoaltv;\r\n    TextView bpmtv;\r\n    TextView bpmUptv;\r\n    TextView bpmDowntv;\r\n    TextView meal_date;\r\n    TextView diet_date,meal_tracker_text;\r\n    static TextView stepsProgressPercent;\r\n    RequestQueue queue;\r\n    ImageButton sidemenu, notifmenu;\r\n    CardView stepcard, heartcard, watercard, sleepcard, weightcard, caloriecard,dietcard,goProCard,mealTrackerCard,workout_card;\r\n    Button btnsub, btnsub1;\r\n    TextView name,date, workout_date, consul_date;\r\n    ImageView profile;\r\n\r\n    CardView consultation_gopro_btn, diet_chart_gopro_btn,meal_tracker_gopro_btn;\r\n\r\n    TextView consultation_text, diet_chart_text;\r\n    ImageView pro_identifier;\r\n\r\n    static ProgressBar stepsProgressBar;\r\n\r\n    ImageView menuBtn, notificationBell, notificationBellUpdate;\r\n    int waterGoal = 0, waterConsumed = 0;\r\n\r\n    String dietitianID,dietitianuserID,dietitianName;\r\n\r\n    public interface OnMenuClicked {\r\n        void menuClicked();\r\n    }\r\n\r\n    OnMenuClicked onMenuClicked;\r\n\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    //private final String urlDt = String.format(\"%sgetDietitianDetail.php\",DataFromDatabase.ipConfig);\r\n    private final String urlDt = \"https://infits.in/androidApi/getDietitianDetail.php\";\r\n\r\n    public DashBoardFragment() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onAttach(@NonNull Context context) {\r\n        super.onAttach(context);\r\n        onMenuClicked = (OnMenuClicked) context;\r\n    }\r\n\r\n    public static DashBoardFragment newInstance(String param1, String param2) {\r\n        DashBoardFragment fragment = new DashBoardFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n//        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {\r\n//            @Override\r\n//            public void handleOnBackPressed() {\r\n//                startActivity(new Intent(getActivity(),DashBoardMain.class));\r\n//            }\r\n//        };\r\n//        requireActivity().getOnBackPressedDispatcher().addCallback(this, callback);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_dash_board, container, false);\r\n\r\n        hooks(view);\r\n\r\n        SharedPreferences sharedPreferences = getActivity().getSharedPreferences(\"DateForSteps\", Context.MODE_PRIVATE);\r\n\r\n\r\n        Date dateForSteps = new Date();\r\n\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"d-M-yyyy\");\r\n\r\n        System.out.println(simpleDateFormat.format(dateForSteps));\r\n\r\n        SharedPreferences.Editor myEdit = sharedPreferences.edit();\r\n\r\n        myEdit.putString(\"date\", simpleDateFormat.format(dateForSteps));\r\n        myEdit.putBoolean(\"verified\",false);\r\n        myEdit.apply();\r\n\r\n        SharedPreferences prefs = requireContext().getSharedPreferences(\"loginDetails\", Context.MODE_PRIVATE);\r\n        String clientuserID = prefs.getString(\"clientuserID\", DataFromDatabase.clientuserID);\r\n\r\n        // Dashboard Profile pic from server\r\n        ImageView profileImageView = view.findViewById(R.id.profile1);\r\n        String DashboardprofilePic = \"https://infits.in/androidApi/upload/default.jpg\";\r\n        Glide.with(this).load(DashboardprofilePic).fitCenter().into(profileImageView);\r\n\r\n        // Execute the query using a Volley StringRequest\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, url1, response -> {\r\n            try {\r\n                JSONObject responseJson = new JSONObject(response);\r\n\r\n                String profilePhoto = responseJson.getString(\"profile\");\r\n                // decode the base64 string to a byte array\r\n                byte[] decodedBytes = Base64.decode(profilePhoto, Base64.DEFAULT);\r\n                Bitmap decodedBitmap = BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);\r\n                if (decodedBitmap != null) {\r\n                    profileImageView.setImageBitmap(decodedBitmap);\r\n                } else {\r\n                    Log.e(\"TAG\", \"Failed to decode bitmap.\");\r\n                }\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n                Log.e(\"ProfilePhotoFetcher\", \"JSON parsing error: \" + e.getMessage());\r\n                // Handle the JSONException here\r\n            }\r\n        }, error -> Toast.makeText(getContext(), error.toString().trim(), Toast.LENGTH_SHORT).show()) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"userID\",clientuserID);\r\n                return data;\r\n            }\r\n        };\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n        requestQueue.add(stringRequest);\r\n\r\n\r\n        Date dateToday = new Date();\r\n        SimpleDateFormat sf = new SimpleDateFormat(\"MMM dd,yyyy\");\r\n\r\n        name.setText(\"Hi \" + DataFromDatabase.name);\r\n        date.setText(sf.format(dateToday));\r\n\r\n        meal_date.setText(sf.format(dateToday));\r\n        diet_date.setText(sf.format(dateToday));\r\n        workout_date.setText(sf.format(dateToday));\r\n        consul_date.setText(sf.format(dateToday));\r\n\r\n\r\n        menuBtn.setOnClickListener(v -> onMenuClicked.menuClicked());\r\n\r\n\r\n        if (DataFromDatabase.proUser){\r\n\r\n            consultation_gopro_btn.setVisibility(View.GONE);\r\n            meal_tracker_gopro_btn.setVisibility(View.GONE);\r\n            diet_chart_gopro_btn.setVisibility(View.GONE);\r\n\r\n            consul_date.setVisibility(View.VISIBLE);\r\n            meal_date.setVisibility(View.VISIBLE);\r\n            diet_date.setVisibility(View.VISIBLE);\r\n            consultation_text.setVisibility(View.VISIBLE);\r\n            meal_tracker_text.setVisibility(View.VISIBLE);\r\n            diet_chart_text.setVisibility(View.VISIBLE);\r\n\r\n            pro_identifier.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n\r\n        SharedPreferences inAppPrefs = requireActivity().getSharedPreferences(\"inAppNotification\", Context.MODE_PRIVATE);\r\n        boolean newNotification = inAppPrefs.getBoolean(\"newNotification\", false);\r\n\r\n        if(newNotification) {\r\n            notificationBellUpdate.setVisibility(View.VISIBLE);\r\n        } else {\r\n            notificationBellUpdate.setVisibility(View.GONE);\r\n        }\r\n\r\n        notificationBell.setOnClickListener(v -> {\r\n            Intent intent = new Intent(requireContext(), InAppNotification.class);\r\n            startActivity(intent);\r\n\r\n            SharedPreferences.Editor inAppEditor = inAppPrefs.edit();\r\n            inAppEditor.putBoolean(\"newNotification\", false);\r\n            inAppEditor.apply();\r\n\r\n            requireActivity().finish();\r\n        });\r\n\r\n        stepcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_stepTrackerFragment));\r\n\r\n        SharedPreferences stepPrefs = PreferenceManager.getDefaultSharedPreferences(requireContext());\r\n        float stepGoal = stepPrefs.getFloat(\"goal\", 0f);\r\n        int stepPercent = stepGoal == 0 ? 0 : (int) ((FetchTrackerInfos.currentSteps * 100) / stepGoal);\r\n        String stepText = stepGoal == 0 ? \"----------\" : (int) stepGoal + \" Steps\";\r\n        String stepPercentText = stepPercent + \"%\";\r\n        Log.d(\"frag\", String.valueOf(FetchTrackerInfos.currentSteps));\r\n        Log.d(\"frag\", String.valueOf(stepGoal));\r\n        Log.d(\"frag\", String.valueOf(stepPercent));\r\n        if (FetchTrackerInfos.currentSteps > 1)\r\n            stepstv.setText(FetchTrackerInfos.currentSteps+\" steps\");\r\n        else stepstv.setText(\"--------\");\r\n        stepsProgressPercent.setText(stepPercentText);\r\n        stepsProgressBar.setProgress(stepPercent);\r\n\r\n        sleepcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_sleepTrackerFragment));\r\n\r\n        SharedPreferences sleepPrefs = requireActivity().getSharedPreferences(\"sleepPrefs\", Context.MODE_PRIVATE);\r\n        String sleepGoalText = sleepPrefs.getString(\"goal\", \"8\") + \" Hours\";\r\n        String sleepText = sleepPrefs.getString(\"hours\", \"00\") + \" hr \" + sleepPrefs.getString(\"minutes\", \"00\") + \" mins\";\r\n\r\n        sleepGoaltv.setText(sleepGoalText);\r\n        sleeptv.setText(sleepText);\r\n\r\n        watercard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_waterTrackerFragment));\r\n        getLatestWaterData();\r\n\r\n        weightcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_weightTrackerFragment));\r\n        getLatestWeightData();\r\n\r\n        SharedPreferences weightPrefs = requireContext().getSharedPreferences(\"weightPrefs\", Context.MODE_PRIVATE);\r\n\r\n        caloriecard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_calorieTrackerFragment));\r\n        getLatestCalorieData();\r\n\r\n        workout_card.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_activityTracker2);\r\n            }\r\n        });\r\n\r\n        mealTrackerCard.setOnClickListener(v->{\r\n            updateVerification();\r\n            if (DataFromDatabase.proUser){\r\n                //Intent intent = new Intent(getActivity(),Meal_main.class);\r\n                //requireActivity().finish();\r\n                //startActivity(intent);\r\n                Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_mealTracker);\r\n            }\r\n            else {\r\n                showDialog();\r\n            }\r\n        });\r\n\r\n        goProCard.setOnClickListener(v->{\r\n            if (DataFromDatabase.proUser){\r\n                if (DataFromDatabase.verification.equals(\"0\")){\r\n                    startActivity(new Intent(getActivity(), connectingDietitian.class));\r\n                }else {\r\n                    updateVerification();\r\n                    Intent intent = new Intent(getActivity(),Consultation.class);\r\n                    requireActivity().finish();\r\n                    startActivity(intent);\r\n                }\r\n\r\n                //Toast.makeText(getContext(),\"Consultation card clicked\",Toast.LENGTH_SHORT).show();\r\n            }\r\n            else {\r\n                showDialog();\r\n            }\r\n        });\r\n\r\n        heartcard.setOnClickListener(v-> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_heartRate));\r\n\r\n        //Include this!!\r\n        //dietcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_fragment_diet_chart));\r\n\r\n        dietcard.setOnClickListener(v->{\r\n            if (DataFromDatabase.proUser){\r\n                updateVerification();\r\n                //Intent intent = new Intent(getActivity(),Meal_main.class);\r\n                //requireActivity().finish();\r\n                //startActivity(intent);\r\n                Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_fragment_diet_chart);\r\n            }\r\n            else {\r\n                showDialog();\r\n            }\r\n        });\r\n\r\n        if (DataFromDatabase.proUser){\r\n            StringRequest dietitianDetails = new StringRequest(Request.Method.POST,urlDt,response -> {\r\n                System.out.println(response);\r\n                Log.d(\"dietitiandetails\",response);\r\n                try {\r\n                    JSONObject object = new JSONObject(response);\r\n                    JSONObject array = object.getJSONObject(\"dietitiandetails\");\r\n                    DataFromDatabase.flag = true;\r\n                    DataFromDatabase.dietitianuserID = array.getString(\"dietitianuserID\");\r\n                    byte[] qrimage = Base64.decode(array.getString(\"profilePhoto\"), 0);\r\n                    DataFromDatabase.dtPhoto = BitmapFactory.decodeByteArray(qrimage, 0, qrimage.length);\r\n                } catch (JSONException jsonException) {\r\n                    jsonException.printStackTrace();\r\n                }\r\n            },error -> {\r\n\r\n            }){\r\n                @Nullable\r\n                @Override\r\n                protected Map<String, String> getParams() throws AuthFailureError {\r\n\r\n                    Map<String,String> data = new HashMap<>();\r\n\r\n                    data.put(\"userID\",prefs.getString(\"dietitianuserID\", DataFromDatabase.dietitianuserID));\r\n\r\n                    return data;\r\n                }\r\n            };\r\n\r\n            Volley.newRequestQueue(getContext()).add(dietitianDetails);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        queue = Volley.newRequestQueue(getContext());\r\n        Log.d(\"ClientMetrics\",\"before\");\r\n\r\n        StringRequest stringRequestHeart = new StringRequest(Request.Method.POST,String.format(\"%sheartrate.php\",DataFromDatabase.ipConfig),response -> {\r\n\r\n            try {\r\n                JSONObject jsonResponse = new JSONObject(response);\r\n                JSONArray jsonArray = jsonResponse.getJSONArray(\"heart\");\r\n                JSONObject jsonObject = jsonArray.getJSONObject(0);\r\n                bpmtv.setText(jsonObject.getString(\"avg\"));\r\n                bpmDowntv.setText(jsonObject.getString(\"min\"));\r\n                bpmUptv.setText(jsonObject.getString(\"max\"));\r\n            }catch (JSONException jsonException){\r\n                jsonException.printStackTrace();\r\n            }\r\n        },error -> {\r\n\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"userID\",clientuserID);\r\n                return data;\r\n            }\r\n        };\r\n\r\n        Volley.newRequestQueue(getContext()).add(stringRequestHeart);\r\n\r\n        StringRequest stringRequest1 = new StringRequest(Request.Method.POST,url, response -> {\r\n            if (!response.equals(\"failure\")){\r\n                Log.d(\"ClientMetrics\",\"success\");\r\n                Log.d(\"response\",response);\r\n                try {\r\n                    JSONArray jsonArray = new JSONArray(response);\r\n                    JSONObject object = jsonArray.getJSONObject(0);\r\n                    String stepsStr = object.getString(\"steps\");\r\n                    String stepsGoal = object.getString(\"stepsgoal\");\r\n                    String waterStr = object.getString(\"waterConsumed\");\r\n                    DataFromDatabase.waterStr = waterStr;\r\n                    String waterGoal = object.getString(\"watergoal\");\r\n                    DataFromDatabase.waterGoal = waterGoal;\r\n                    String sleephrsStr = object.getString(\"sleephrs\");\r\n                    String sleepminsStr = object.getString(\"sleepmins\");\r\n                    String sleepGoal = object.getString(\"sleepgoal\");\r\n                    String weightStr = object.getString(\"weight\");\r\n                    DataFromDatabase.weightStr = weightStr;\r\n                    String weightGoal = object.getString(\"weightgoal\");\r\n                    DataFromDatabase.weightGoal = weightGoal;\r\n                    stepstv.setText(Html.fromHtml(String.format(\"<strong>%s</strong> steps\",stepsStr)));\r\n                    glassestv.setText(Html.fromHtml(String.format(\"<strong>%s</strong> ml\",waterStr)));\r\n                    glassesGoaltv.setText(Html.fromHtml(String.format(\"<strong>%s ml</strong>\",waterGoal)));\r\n                    sleeptv.setText(Html.fromHtml(String.format(\"<strong>%s</strong> hr <strong>%s</strong> mins\",sleephrsStr,sleepminsStr)));\r\n                    sleepGoaltv.setText(Html.fromHtml(String.format(\"<strong>%s Hours</strong>\",sleepGoal)));\r\n                    weighttv.setText(Html.fromHtml(String.format(\"<strong>%s </strong>KiloGrams\",weightStr)));\r\n                    weightGoaltv.setText(Html.fromHtml(String.format(\"<strong>%s KG</strong>\",weightGoal)));\r\n\r\n                    if (stepsStr.equals(\"null\")){\r\n                        stepstv.setText(R.string.No_data);\r\n                    }if (waterStr.equals(\"null\")){\r\n                        glassestv.setText(R.string.No_data);\r\n                    }if (waterGoal.equals(\"null\")){\r\n                        glassesGoaltv.setText(R.string.No_data);\r\n                    }if (sleephrsStr.equals(\"null\")){\r\n                        sleeptv.setText(R.string.No_data);\r\n                    }if (sleepGoal.equals(\"null\")){\r\n                        sleepGoaltv.setText(R.string.No_data);\r\n                    }if (weightStr.equals(\"null\")){\r\n                        weighttv.setText(R.string.No_data);\r\n                    }if (weightGoal.equals(\"null\")){\r\n                        weightGoaltv.setText(R.string.No_data);\r\n                    }\r\n\r\n                    steps_update(stepsStr,stepsGoal);\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n            //else if (response.equals(\"failure\")){\r\n            else{\r\n                Log.d(\"clientMetrics\",\"failure\");\r\n                Toast.makeText(getContext(), \"ClientMetrics failed\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        },error -> Log.d(\"dashBoardFrag\", error.toString()))\r\n        {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                data.put(\"clientID\", DataFromDatabase.client_id);\r\n                return data;\r\n            }\r\n        };\r\n\r\n        // RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n        // requestQueue.add(stringRequest);\r\n        RequestQueue requestQueue1 = Volley.newRequestQueue(getContext());\r\n        requestQueue1.add(stringRequest);\r\n\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n//        Log.d(\"ClientMetrics\",\"at end\");\r\n\r\n        DashBoardMain dashBoardMain = (DashBoardMain) requireActivity();\r\n        String cardClicked = dashBoardMain.getCardClicked();\r\n\r\n        if(cardClicked != null) {\r\n            switch (cardClicked) {\r\n                case \"step\":\r\n                    Bundle stepBundle = new Bundle();\r\n                    stepBundle.putBoolean(\"notification\", true);\r\n                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_stepTrackerFragment, stepBundle);\r\n                    break;\r\n                case \"sleep\":\r\n                    Bundle sleepBundle = new Bundle();\r\n                    sleepBundle.putBoolean(\"notification\", true);\r\n                    sleepBundle.putString(\"sleepTime\", dashBoardMain.getSleepTime());\r\n                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_sleepTrackerFragment, sleepBundle);\r\n                    break;\r\n                case \"weight\": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_weightTrackerFragment);\r\n                    break;\r\n                case \"heart\": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_heartRate);\r\n                    break;\r\n                case \"calorie\": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_calorieTrackerFragment);\r\n                    break;\r\n                case \"water\":\r\n                    Bundle waterBundle = new Bundle();\r\n                    waterBundle.putBoolean(\"notification\", true);\r\n                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_waterTrackerFragment, waterBundle);\r\n            }\r\n        }\r\n        return view;\r\n    }\r\n\r\n    public void setProfileImage(Drawable drawable) {\r\n        profile.setImageDrawable(drawable);\r\n    }\r\n\r\n\r\n    private void getLatestCalorieData() {\r\n        //String calorieUrl = String.format(\"%sgetLatestCalorieData.php\", DataFromDatabase.ipConfig);\r\n        String calorieUrl = \"https://infits.in/androidApi/getLatestCalorieData.php\";\r\n        calorietv.setText(\"------\");\r\n        calorieGoaltv.setText(\"2000 Kcal\");\r\n\r\n        StringRequest calorieRequest = new StringRequest( Request.Method.POST, calorieUrl,\r\n                response -> {\r\n                    Log.d(\"DashBoardFragment\", response);\r\n\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        JSONObject array = object.getJSONObject(\"food\");\r\n\r\n                        if (array.isNull(\"Calories\")) {\r\n                            calorietv.setText(\"0 kcal\");\r\n                            String calorieGoalText = array.getString(\"goal\") + \" kcal\";\r\n                            calorieGoaltv.setText(calorieGoalText);\r\n                        } else {\r\n                            String calorieValueText = array.getString(\"Calories\") + \" kcal\";\r\n                            String calorieGoalText = array.getString(\"goal\") + \" kcal\";\r\n\r\n                            calorietv.setText(calorieValueText);\r\n                            calorieGoaltv.setText(calorieGoalText);\r\n                        }\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                },\r\n                error -> Log.e(\"DashBoardFragment\", error.toString())\r\n        ) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                Date date = new Date();\r\n                data.put(\"clientID\", DataFromDatabase.clientuserID);\r\n                data.put(\"dateandtime\",caloriedateFormat.format(date));\r\n\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(calorieRequest);\r\n        calorieRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void getLatestWeightData(){\r\n        //String Url = String.format(\"%sgetLatestWeightData.php\", DataFromDatabase.ipConfig);\r\n        String Url = \"https://infits.in/androidApi/getLatestWeightData.php\";\r\n        weighttv.setText(\"------\");\r\n        weightGoaltv.setText(\"70 Kg\");\r\n\r\n        StringRequest calorieRequest = new StringRequest( Request.Method.POST, Url,\r\n                response -> {\r\n                    Log.d(\"DashBoardFragment Weight\", response);\r\n\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        JSONObject array = object.getJSONObject(\"weight\");\r\n\r\n                        if(array.length() == 0) {\r\n                            weighttv.setText(\"----------\");\r\n                            weightGoaltv.setText(\"----------\");\r\n                        }else{\r\n                            String weight = array.getString(\"weight\");\r\n                            String Goal = array.getString(\"goal\");\r\n                            String bmi = array.getString(\"bmi\");\r\n\r\n                            weighttv.setText((weight) + \" Kg\");\r\n                            weightGoaltv.setText((Goal) + \" Kg\");\r\n                            DataFromDatabase.weightStr = weight;\r\n                            DataFromDatabase.weightGoal = Goal;\r\n                            DataFromDatabase.bmi = bmi;\r\n                        }\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                },\r\n                error -> Log.e(\"DashBoardFragment\", error.toString())\r\n        ) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                data.put(\"clientID\", DataFromDatabase.clientuserID);\r\n\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(calorieRequest);\r\n        calorieRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void hooks(View view) {\r\n        menuBtn = view.findViewById(R.id.hamburger_menu);\r\n        notificationBell = view.findViewById(R.id.dashboard_bell);\r\n        notificationBellUpdate = view.findViewById(R.id.dashboard_bell_update);\r\n\r\n        name = view.findViewById(R.id.nameInDash);\r\n        date = view.findViewById(R.id.date);\r\n\r\n        //profile = view.findViewById(R.id.profile1);\r\n\r\n        /*\r\n        if (DataFromDatabase.profile != null) {\r\n            profile.setImageBitmap(DataFromDatabase.profile);\r\n        } else {\r\n            if (getActivity() != null) {\r\n                fragment.setProfileImage(ContextCompat.getDrawable(getActivity(), R.drawable.profile));\r\n            }\r\n        }*/\r\n\r\n        //profile.setImageBitmap(DataFromDatabase.profile);\r\n\r\n        stepstv = view.findViewById(R.id.steps);\r\n        glassestv = view.findViewById(R.id.glasses);\r\n        glassesGoaltv = view.findViewById(R.id.glassesGoal);\r\n        sleeptv = view.findViewById(R.id.sleep);\r\n        sleepGoaltv = view.findViewById(R.id.sleepgoal);\r\n        weighttv = view.findViewById(R.id.weight);\r\n        weightGoaltv = view.findViewById(R.id.weightGoal);\r\n        calorietv = view.findViewById(R.id.calorie);\r\n        calorieGoaltv = view.findViewById(R.id.GoalCalorie);\r\n        bpmtv = view.findViewById(R.id.bpm);\r\n        bpmUptv = view.findViewById(R.id.bpmUp);\r\n        bpmDowntv = view.findViewById(R.id.bpmDown);\r\n\r\n        //Dates\r\n        meal_date = view.findViewById(R.id.date_meal);\r\n        diet_date = view.findViewById(R.id.date_diet);\r\n        workout_date = view.findViewById(R.id.workout_date);\r\n        consul_date = view.findViewById(R.id.consultation_date);\r\n\r\n        //goPro buttons\r\n        consultation_gopro_btn=view.findViewById(R.id.consultation_gopro_btn);\r\n        diet_chart_gopro_btn=view.findViewById(R.id.diet_chart_gopro_btn);\r\n        meal_tracker_gopro_btn=view.findViewById(R.id.meal_tracker_go_pro_btn);\r\n\r\n        //Pro textviews\r\n        consultation_text=view.findViewById(R.id.consultation_txt);\r\n        meal_tracker_text=view.findViewById(R.id.meal_track_txt);\r\n        diet_chart_text=view.findViewById(R.id.diet_chart_txt);\r\n        pro_identifier=view.findViewById(R.id.pro_identifier);\r\n\r\n        //CardView\r\n        stepcard = view.findViewById(R.id.stepcard);\r\n        heartcard = view.findViewById(R.id.heartcard);\r\n        watercard = view.findViewById(R.id.watercard);\r\n        sleepcard = view.findViewById(R.id.sleepcard);\r\n        weightcard = view.findViewById(R.id.weightcard);\r\n        caloriecard = view.findViewById(R.id.caloriecard);\r\n        dietcard = view.findViewById(R.id.dietcardPro);\r\n\r\n\r\n        goProCard = view.findViewById(R.id.proCrad);\r\n        mealTrackerCard = view.findViewById(R.id.meal_tracker);\r\n        diet_date = view.findViewById(R.id.date_diet);\r\n        workout_card = view.findViewById(R.id.workout_card);\r\n        stepsProgressPercent = view.findViewById(R.id.steps_progress_percent);\r\n        stepsProgressBar = view.findViewById(R.id.steps_progress_bar);\r\n    }\r\n\r\n    private void showDialog() {\r\n        final Dialog dialog = new Dialog(getActivity());\r\n        dialog.setCancelable(true);\r\n        dialog.setContentView(R.layout.referralcodedialog);\r\n        final EditText referralCode = dialog.findViewById(R.id.referralcode);\r\n        ImageView checkReferral = dialog.findViewById(R.id.checkReferral);\r\n        checkReferral.setOnClickListener(vi->{\r\n\r\n            //String referralUrl = String.format(\"%sverify.php\",DataFromDatabase.ipConfig);\r\n            StringRequest stringRequest = new StringRequest(Request.Method.POST,urlRefer,\r\n                    response->{\r\n                        Log.d(\"DietitianVerification\", response);\r\n\r\n                        if(response.equals(\"found\")) {\r\n                            showSuccessDialog();\r\n                            System.out.println(\"Verified\");\r\n                        }else {\r\n                            System.out.println(\"Not verified\");\r\n                            showFailureDialog();\r\n                        }\r\n\r\n                    },error->{\r\n\r\n            }){\r\n                @Nullable\r\n                @Override\r\n                protected Map<String, String> getParams() throws AuthFailureError {\r\n\r\n                    Map<String,String> data = new HashMap<>();\r\n\r\n                    //data.put(\"clientID\",DataFromDatabase.clientuserID);\r\n                    Entered = referralCode.getText().toString();\r\n                    data.put(\"dietitian_verify_code\",Entered);\r\n                    data.put(\"type\",\"1\");\r\n\r\n\r\n                    return data;\r\n                }\r\n            };\r\n            Volley.newRequestQueue(getContext()).add(stringRequest);\r\n            stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                    DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                    DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n            dialog.dismiss();\r\n        });\r\n        dialog.show();\r\n    }\r\n\r\n    private void showFailureDialog() {\r\n        Dialog dialog = new Dialog(requireContext());\r\n        dialog.setContentView(R.layout.wrong_referral_dialog);\r\n        dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n        Button btn = dialog.findViewById(R.id.try_again);\r\n\r\n        btn.setOnClickListener(v -> dialog.dismiss());\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    private void showSuccessDialog() {\r\n        getUpdatedDietitianData();\r\n        Dialog dialog = new Dialog(requireContext());\r\n        dialog.setContentView(R.layout.referral_congratulation);\r\n        dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n        ImageView btn = dialog.findViewById(R.id.btn);\r\n        consultation_gopro_btn.setVisibility(View.GONE);\r\n        meal_tracker_gopro_btn.setVisibility(View.GONE);\r\n        diet_chart_gopro_btn.setVisibility(View.GONE);\r\n\r\n        consul_date.setVisibility(View.VISIBLE);\r\n        meal_date.setVisibility(View.VISIBLE);\r\n        diet_date.setVisibility(View.VISIBLE);\r\n        consultation_text.setVisibility(View.VISIBLE);\r\n        meal_tracker_text.setVisibility(View.VISIBLE);\r\n        diet_chart_text.setVisibility(View.VISIBLE);\r\n\r\n        pro_identifier.setVisibility(View.VISIBLE);\r\n\r\n\r\n        btn.setOnClickListener(v -> {\r\n            dialog.dismiss();\r\n            updateVerification();\r\n\r\n        });\r\n\r\n        dialog.show();\r\n    }\r\n    private void getUpdatedDietitianData(){\r\n        final Dialog dialog = new Dialog(getActivity());\r\n        final EditText referralCode = dialog.findViewById(R.id.referralcode);\r\n        String Url = String.format(\"%sgetUpdatedDietitianData.php\", DataFromDatabase.ipConfig);\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,Url, response -> {\r\n            Log.d(\"updatedDietitianData\", response);\r\n            try {\r\n                JSONObject jsonObject = new JSONObject(response);\r\n                if (jsonObject.has(\"DietitianData\")) {\r\n                    JSONObject dietitianData = jsonObject.getJSONObject(\"DietitianData\");\r\n                    DataFromDatabase.dietitian_id = dietitianData.getString(\"dietitianID\");\r\n                    DataFromDatabase.dietitianuserID = dietitianData.getString(\"dietitianuserID\");\r\n                    System.out.println(DataFromDatabase.dietitian_id);\r\n                    System.out.println(DataFromDatabase.dietitianuserID);\r\n                }\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        },error -> {\r\n\r\n            Log.d(\"updatedDietitianData Err\",error.toString());\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"verify_code\",Entered);\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(getActivity()).add(stringRequest);\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(7000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void updateVerification(){\r\n        final Dialog dialog = new Dialog(getActivity());\r\n        final EditText referralCode = dialog.findViewById(R.id.referralcode);\r\n\r\n        //String url = String.format(\"%sdietitianUpdated.php\",DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/dietitianUpdated.php\";\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,url,\r\n                response->{\r\n                    Log.d(\"DietitianUpdated\", response);\r\n\r\n                    if(response.equals(\"Updated\")) {\r\n                        System.out.println(\"Updated\");\r\n                        DataFromDatabase.proUser = true;\r\n\r\n                    }else {\r\n                        System.out.println(\"Not verified\");\r\n                    }\r\n\r\n                },error->{\r\n\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n\r\n                Map<String,String> data = new HashMap<>();\r\n\r\n                data.put(\"clientuserID\",DataFromDatabase.clientuserID);\r\n                data.put(\"referralCode\",Entered);\r\n                data.put(\"dietitianID\",DataFromDatabase.dietitian_id);\r\n                data.put(\"dietitianuserID\",DataFromDatabase.dietitianuserID);\r\n                data.put(\"type\",\"1\");\r\n                data.put(\"verification\",\"0\");\r\n\r\n\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(getContext()).add(stringRequest);\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(7000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n    }\r\n\r\n    public static void updateStepCard(Intent intent) {\r\n        Log.wtf(\"dashboard\", \"entered\");\r\n        if (intent.getExtras() != null) {\r\n            float steps = intent.getIntExtra(\"steps\",0);\r\n            final float[] goalPercent = new float[1];\r\n\r\n            Log.i(\"StepTracker\",\"Countdown seconds remaining:\" + steps);\r\n            Handler handler = new Handler();\r\n            handler.postDelayed(() -> {\r\n                goalPercent[0] = ((steps/goalVal)*100)/100;\r\n                stepsProgressBar.setProgress((int) goalPercent[0]);\r\n                stepsProgressPercent.setText(String.valueOf((int) goalPercent[0]));\r\n\r\n                System.out.println(\"steps: \" + steps);\r\n                System.out.println(\"goalVal: \" + goalVal);\r\n                System.out.println(\"goalPercent: \" + goalPercent[0]);\r\n            },2000);\r\n        }\r\n    }\r\n\r\n    public void getLatestWaterData() {\r\n        //String url = String.format(\"%sgetLatestWaterdt.php\", DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/getLatestWaterdt.php\";\r\n        glassestv.setText(\"----------\");\r\n        glassesGoaltv.setText(\"8 Glasses\");\r\n        StringRequest request = new StringRequest(Request.Method.POST, url,\r\n                response -> {\r\n                    Log.d(\"dashboardFrag\", response);\r\n\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        JSONObject array = object.getJSONObject(\"water\");\r\n\r\n                        if(array.length() == 0) {\r\n                            glassestv.setText(\"----------\");\r\n                            glassesGoaltv.setText(\"----------\");\r\n                        }else{\r\n                            String waterGoalStr = array.getString(\"goal\");\r\n                            String waterConsumedStr = array.getString(\"drinkConsumed\");\r\n\r\n                            waterGoal = Integer.parseInt(waterGoalStr) / 250;\r\n                            waterConsumed = Integer.parseInt(waterConsumedStr) / 250;  // 250 ml = 1 glass\r\n\r\n                            glassestv.setText(waterConsumed + \" Glasses\");\r\n                            glassesGoaltv.setText(waterGoal + \" Glasses\");\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }, error -> Log.e(\"dashboardFrag\", error.toString())) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                Date date= new Date();\r\n                data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                data.put(\"dateandtime\",dateFormat.format(date));\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(request);\r\n        request.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    public void steps_update(String steps , String goal)\r\n    {\r\n        int step1=Integer.parseInt(steps);\r\n        int goal1= Integer.parseInt(goal);\r\n\r\n        int stepPercent= (int) (step1 * 100)/goal1;\r\n        String stepPercentText = stepPercent + \"%\";\r\n        stepsProgressPercent.setText(stepPercentText);\r\n        stepsProgressBar.setProgress(stepPercent);\r\n\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/DashBoardFragment.java b/app/src/main/java/com/example/infits/DashBoardFragment.java
--- a/app/src/main/java/com/example/infits/DashBoardFragment.java	
+++ b/app/src/main/java/com/example/infits/DashBoardFragment.java	
@@ -1,13 +1,13 @@
 package com.example.infits;
+
 import static com.example.infits.StepTrackerFragment.goalVal;
+
 import android.app.Dialog;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
-import android.graphics.Color;
-import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.os.Handler;
@@ -25,34 +25,30 @@
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.cardview.widget.CardView;
 import androidx.fragment.app.Fragment;
 import androidx.navigation.Navigation;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.work.ExistingPeriodicWorkPolicy;
-import androidx.work.PeriodicWorkRequest;
-import androidx.work.WorkManager;
+
 import com.android.volley.AuthFailureError;
 import com.android.volley.DefaultRetryPolicy;
 import com.android.volley.Request;
 import com.android.volley.RequestQueue;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
+import com.bumptech.glide.Glide;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
-import com.bumptech.glide.Glide;
 
-import java.text.DateFormat;
-import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Locale;
 import java.util.Map;
-import java.util.concurrent.TimeUnit;
 public class DashBoardFragment extends Fragment {
 
     //String urlRefer = String.format("%sverify.php",DataFromDatabase.ipConfig);
@@ -233,7 +229,7 @@
         menuBtn.setOnClickListener(v -> onMenuClicked.menuClicked());
 
 
-        if (DataFromDatabase.proUser){
+        if (!DataFromDatabase.proUser){
 
             consultation_gopro_btn.setVisibility(View.GONE);
             meal_tracker_gopro_btn.setVisibility(View.GONE);
@@ -322,12 +318,13 @@
                 Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_mealTracker);
             }
             else {
-                showDialog();
+                //showDialog();
+                startActivity(new Intent(getActivity(), connectingDietitian.class));
             }
         });
 
         goProCard.setOnClickListener(v->{
-            if (DataFromDatabase.proUser){
+            if (!DataFromDatabase.proUser){
                 if (DataFromDatabase.verification.equals("0")){
                     startActivity(new Intent(getActivity(), connectingDietitian.class));
                 }else {
@@ -340,7 +337,9 @@
                 //Toast.makeText(getContext(),"Consultation card clicked",Toast.LENGTH_SHORT).show();
             }
             else {
-                showDialog();
+                //showDialog();
+                startActivity(new Intent(getActivity(), connectingDietitian.class));
+
             }
         });
 
@@ -358,7 +357,8 @@
                 Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_fragment_diet_chart);
             }
             else {
-                showDialog();
+                //showDialog();
+                startActivity(new Intent(getActivity(), connectingDietitian.class));
             }
         });
 
Index: app/src/main/java/com/example/infits/DashBoardMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\n\r\nimport android.Manifest;\r\nimport android.app.AlarmManager;\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport java.util.Locale;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class DashBoardMain extends AppCompatActivity implements DashBoardFragment.OnMenuClicked, UpdateStepCard {\r\n\r\n    NavigationView nav;\r\n    ActionBarDrawerToggle toggle;\r\n    DrawerLayout drawerLayout;\r\n\r\n    private String[] allPermissions;\r\n    boolean drawerState = false;\r\n    String cardClicked;\r\n    String hours, minutes, secs;\r\n    TextView drawerusername,draweruserplan;\r\n    CircleImageView profilePicNav;\r\n    String Entered;\r\n\r\n    boolean isMealNotificationFinished;\r\n    SharedPreferences sharedPreferences;\r\n    String profilePicimg = \"https://infits.in/androidApi/upload/default.jpg\";\r\n    //String url =\"http://192.168.29.222/infits/recipiesDisplay.php\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_dash_board_main);\r\n        sharedPreferences = this.getSharedPreferences(\"mealInfo\",MODE_PRIVATE);\r\n        /*\r\n        fragment.getView().post(() -> {\r\n             ImageView imageView = fragment.getView().findViewById(R.id.profile1);\r\n            imageView.setImageResource(R.drawable.profile);\r\n        });*/\r\n\r\n\r\n        permissionsCheck();\r\n\r\n        permissions();\r\n\r\n\r\n\r\n        nav = findViewById(R.id.navmenu);\r\n        drawerLayout = findViewById(R.id.drawer);\r\n        profilePicNav = findViewById(R.id.drawer_profile_pic);\r\n\r\n        toggle = new ActionBarDrawerToggle(this,drawerLayout,R.string.navigation_open,R.string.navigation_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n\r\n\r\n        drawerLayout.addDrawerListener(new ActionBarDrawerToggle(this, drawerLayout, 0, 0) {\r\n            @Override\r\n            public void onDrawerOpened(View drawerView) {\r\n                super.onDrawerOpened(drawerView);\r\n                drawerusername = findViewById(R.id.drawer_username);\r\n                draweruserplan = findViewById(R.id.drawer_user_plan);\r\n                drawerusername.setText(DataFromDatabase.name);\r\n                drawerState = true;\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(View drawerView) {\r\n                super.onDrawerClosed(drawerView);\r\n                drawerState = false;\r\n            }\r\n        });\r\n\r\n//        Navigation profile pic\r\n        Glide.with(DashBoardMain.this).load(profilePicimg).fitCenter().into(profilePicNav);\r\n\r\n        /*\r\n        if (!DataFromDatabase.proUser){\r\n            Menu nav_Menu = nav.getMenu();\r\n            nav_Menu.findItem(R.id.consul).setVisible(false);\r\n            //nav_Menu.findItem(R.id.message).setVisible(false);\r\n            nav_Menu.findItem(R.id.live).setVisible(false);\r\n            nav_Menu.findItem(R.id.scan).setVisible(false);\r\n        }*/\r\n\r\n\r\n        cardClicked = getIntent().getStringExtra(\"notification\");\r\n\r\n        if(cardClicked != null) {\r\n            if(cardClicked.equals(\"sleep\")) {\r\n                hours = getIntent().getStringExtra(\"hours\");\r\n                minutes = getIntent().getStringExtra(\"minutes\");\r\n                secs = getIntent().getStringExtra(\"secs\");\r\n            }\r\n        }\r\n\r\n        nav.setNavigationItemSelectedListener(menuItem -> {\r\n            switch(menuItem.getItemId()) {\r\n                case R.id.dboard:\r\n                    Intent idb = new Intent(DashBoardMain.this, DashBoardMain.class);\r\n                    startActivity(idb);\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                    finish();\r\n                    break;\r\n\r\n                case R.id.charts:\r\n                    Intent ich = new Intent(DashBoardMain.this, Statistics.class);\r\n                    startActivity(ich);\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                    break;\r\n\r\n                case R.id.live:\r\n                    if (DataFromDatabase.proUser){\r\n                        Intent icL = new Intent(DashBoardMain.this, LiveListAct.class);\r\n                        startActivity(icL);\r\n                    }\r\n                    else {\r\n                        //showDialog();\r\n                        Toast toast = Toast.makeText(this,\"Required pro account\",Toast.LENGTH_SHORT);\r\n                        toast.show();\r\n                    }\r\n\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                    break;\r\n\r\n                case R.id.consul:\r\n                    if (DataFromDatabase.proUser){\r\n                        Intent icl = new Intent(DashBoardMain.this, Consultation.class);\r\n                        startActivity(icl);\r\n                    }\r\n                    else {\r\n                        // showDialog();\r\n                        Toast toast = Toast.makeText(this,\"Required pro account\",Toast.LENGTH_SHORT);\r\n                        toast.show();\r\n                    }\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                    break;\r\n\r\n                case R.id.setting:\r\n                    Intent ist = new Intent(DashBoardMain.this, Settings.class);\r\n                    startActivity(ist);\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                    break;\r\n\r\n                //case R.id.recipes:\r\n                //Intent h = new Intent(DashBoardMain.this, recipies.class);\r\n                //startActivity(h);\r\n                //drawerLayout.closeDrawer(GravityCompat.START);\r\n\r\n                //break;\r\n\r\n                    /*\r\n                    case R.id.message:\r\n                        Intent imt = new Intent(DashBoardMain.this, ChatArea.class);\r\n                        startActivity(imt);\r\n                        drawerLayout.closeDrawer(GravityCompat.START);\r\n                        break;*/\r\n\r\n                case R.id.scan:\r\n                    Intent iscan = new Intent(DashBoardMain.this,ScanActivity.class);\r\n                    startActivity(iscan);\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n\r\n\r\n            isMealNotificationFinished = sharedPreferences.getBoolean(\"mealRunning\",true);\r\n            SharedPreferences.Editor editor = (SharedPreferences.Editor) sharedPreferences.edit();\r\n\r\n        Log.i(\"Meal Alarm status\", \"finished :\"+isMealNotificationFinished );\r\n\t\t\t\t//this set meal notification at different time\r\n            if(isMealNotificationFinished) {\r\n\r\n                isMealNotificationFinished = false;\r\n                editor.putBoolean(\"mealRunning\",isMealNotificationFinished);\r\n                editor.apply();\r\n\r\n                long BreakfastTime = 07 * 3600 * 1000 + 30 * 60 * 1000;\r\n                long LunchTime = 13 * 3600 * 1000;\r\n                long SnackTime = 16 * 3600 * 1000 + 30 * 60 * 1000;\r\n                long DinnerTime = 20 * 3600 * 1000;\r\n\r\n\r\n                createNotificationChannel();\r\n\r\n                setMealAlarm(BreakfastTime, \"breakfast\", 601);\r\n                setMealAlarm(LunchTime, \"lunch\", 602);\r\n                setMealAlarm(SnackTime,\"snack\",603);\r\n                setMealAlarm(DinnerTime,\"dinner\",604);\r\n\r\n\r\n                //    long AfterBreakfastTime =  120 * 1000;\r\n//                long AfterLunchTime = 13 * 3600 * 1000 + 30 * 60 * 1000;\r\n//                long AfterSnackTime = 17 * 3600 * 1000;\r\n//                long AfterDinnerTime = 20 * 3600 * 1000 + 30 * 60 * 1000;\r\n\r\n                // setMealAlarm(AfterBreakfastTime, \"Afterbreakfast\", 605);\r\n//        setMealAlarm(AfterLunchTime, \"Afterlunch\", 606);\r\n//        setMealAlarm(AfterSnackTime,\"Aftersnack\",607);\r\n//        setMealAlarm(AfterDinnerTime,\"Afterdinner\",608);\r\n\r\n            }\r\n\r\n    }\r\n    private void createNotificationChannel() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            NotificationChannel channel = new NotificationChannel(\"CalorieChannelId\", \"calNotification\", NotificationManager.IMPORTANCE_HIGH);\r\n            NotificationManager manager = this.getSystemService(NotificationManager.class);\r\n            manager.createNotificationChannel(channel);\r\n        }\r\n    }\r\n\r\n    private void setMealAlarm(long alarmTime,String text,int alarmCode) {\r\n        long NotificationTimeInMillis = alarmTime;\r\n        long todayTimeInMillis = org.joda.time.LocalDateTime.now().getMillisOfDay();\r\n        long timeDiff;\r\n        if(todayTimeInMillis > NotificationTimeInMillis){\r\n            long oneDayInMillis  = 24*3600*1000;\r\n            timeDiff = oneDayInMillis - (todayTimeInMillis-NotificationTimeInMillis);\r\n        }else {\r\n            timeDiff = NotificationTimeInMillis - todayTimeInMillis;\r\n        }\r\n        AlarmManager alarmManager = (AlarmManager) this.getSystemService(this.ALARM_SERVICE);\r\n\r\n        Intent intent = new Intent(DashBoardMain.this,CalorieNotificationReceiver.class);\r\n        intent.putExtra(\"Meal\",text);\r\n        PendingIntent caloriePendingIntent = PendingIntent.getBroadcast(this,alarmCode,intent,PendingIntent.FLAG_MUTABLE);\r\n        alarmManager.set(AlarmManager.RTC_WAKEUP,System.currentTimeMillis()+timeDiff,caloriePendingIntent);\r\n\r\n        Log.i(\"Alarm info\", \"Alarm will triggered after : \"+timeDiff/1000+\"sec\");\r\n       // Toast.makeText(this, \"Alarm will triggered after : \"+alarmTime/1000+\"sec\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    private void permissionsCheck() {\r\n        if(!hasPermissions(DashBoardMain.this,allPermissions)){\r\n            ActivityCompat.requestPermissions(DashBoardMain.this,allPermissions,1234);\r\n        }\r\n    }\r\n\r\n    private void permissions() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n            allPermissions = new String[]{\r\n                    Manifest.permission.BODY_SENSORS,\r\n                    Manifest.permission.CAMERA,\r\n                    Manifest.permission.ACTIVITY_RECOGNITION,\r\n                    Manifest.permission.CALL_PHONE,\r\n                    Manifest.permission.BLUETOOTH,\r\n                    Manifest.permission.READ_PHONE_STATE,\r\n                    Manifest.permission.RECORD_AUDIO\r\n            };\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if(requestCode==1234){\r\n            boolean x=false;\r\n            for(int i=0;i<allPermissions.length;i++)\r\n            {\r\n                if(grantResults[i]==PackageManager.PERMISSION_GRANTED){\r\n                    Toast.makeText(this, \"All Permissions are required\", Toast.LENGTH_SHORT).show();\r\n                }else{\r\n                    x=true;\r\n                }\r\n            }\r\n            if(x){\r\n                Toast.makeText(this, \"All permissions are required\", Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private boolean hasPermissions(Context context, String...  allPermissions){\r\n        if(context!=null && allPermissions !=null){\r\n            for(String allPermit :allPermissions){\r\n                if(ActivityCompat.checkSelfPermission(context,allPermit)!= PackageManager.PERMISSION_GRANTED){\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"Weight\",MODE_PRIVATE);\r\n\r\n        SharedPreferences.Editor myEdit = sharedPreferences.edit();\r\n\r\n        myEdit.putString(\"weight\", \"0\");\r\n        myEdit.putString(\"weightChangeDate\", \"\");\r\n\r\n        myEdit.apply();\r\n    }\r\n\r\n    @Override\r\n    public void menuClicked() {\r\n        if(!drawerState) {\r\n            drawerLayout.openDrawer(GravityCompat.START);\r\n        } else {\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        }\r\n    }\r\n\r\n    public String getCardClicked() {\r\n        return cardClicked;\r\n    }\r\n\r\n    public String getSleepTime() {\r\n        return String.format(Locale.getDefault(), \"%s:%s:%s\", hours, minutes, secs);\r\n    }\r\n\r\n    @Override\r\n    public void updateStepCardData(Intent intent) {\r\n        Log.wtf(\"mainFrag\", \"entered\");\r\n        DashBoardFragment.updateStepCard(intent);\r\n    }\r\n\r\n    //  private void showDialog() {\r\n    //  final Dialog dialog = new Dialog(this);dialog.setCancelable(true);\r\n    //  dialog.setContentView(R.layout.referralcodedialog);\r\n    //  final EditText referralCode = dialog.findViewById(R.id.referralcode);\r\n    //  ImageView checkReferral = dialog.findViewById(R.id.checkReferral);\r\n    //  checkReferral.setOnClickListener(vi->{\r\n\r\n    //     //String referralUrl = String.format(\"%sverify.php\",DataFromDatabase.ipConfig);\r\n    //     String urlRefer = \"https://infits.in/androidApi/verify.php\";\r\n    //       StringRequest stringRequest = new StringRequest(Request.Method.POST,urlRefer,\r\n    //             response->{\r\n    //                 Log.d(\"DietitianVerification\", response);\r\n    ///\r\n    //                if(response.equals(\"found\")) {\r\n    //                   showSuccessDialog();\r\n    //                   System.out.println(\"Verified\");\r\n    //               }else {\r\n    //                   System.out.println(\"Not verified\");\r\n    //                   showFailureDialog();\r\n    //               }\r\n\r\n    //           },error->{\r\n\r\n    //   }){\r\n    //      @Nullable\r\n    //      @Override\r\n    //      protected Map<String, String> getParams() throws AuthFailureError {\r\n    //\r\n    //          Map<String,String> data = new HashMap<>();\r\n    //\r\n    //          //data.put(\"clientID\",DataFromDatabase.clientuserID);\r\n    //          Entered = referralCode.getText().toString();\r\n    //          data.put(\"dietitian_verify_code\",Entered);\r\n    //          data.put(\"type\",\"1\");\r\n\r\n\r\n    //         return data;\r\n    //      }\r\n    //   };\r\n    //    Volley.newRequestQueue(this).add(stringRequest);\r\n    //     stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n    //             DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n    //             DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    //     dialog.dismiss();\r\n    //  });\r\n    //  dialog.show();\r\n    //  }\r\n\r\n    // private void showSuccessDialog() {\r\n    //   Dialog dialog = new Dialog(this);\r\n    //  dialog.setContentView(R.layout.referral_congratulation);\r\n    // dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n    //  ImageView btn = dialog.findViewById(R.id.btn);\r\n\r\n\r\n    //   btn.setOnClickListener(v -> {\r\n    //      dialog.dismiss();\r\n\r\n    //   });\r\n\r\n    //  dialog.show();\r\n    //  }\r\n\r\n    // private void showFailureDialog() {\r\n    //  Dialog dialog = new Dialog(this);\r\n    // dialog.setContentView(R.layout.wrong_referral_dialog);\r\n    //  dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n    // Button btn = dialog.findViewById(R.id.try_again);\r\n\r\n    // btn.setOnClickListener(v -> dialog.dismiss());\r\n\r\n    //  dialog.show();\r\n    // }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/DashBoardMain.java b/app/src/main/java/com/example/infits/DashBoardMain.java
--- a/app/src/main/java/com/example/infits/DashBoardMain.java	
+++ b/app/src/main/java/com/example/infits/DashBoardMain.java	
@@ -249,7 +249,7 @@
         Intent intent = new Intent(DashBoardMain.this,CalorieNotificationReceiver.class);
         intent.putExtra("Meal",text);
         PendingIntent caloriePendingIntent = PendingIntent.getBroadcast(this,alarmCode,intent,PendingIntent.FLAG_MUTABLE);
-        alarmManager.set(AlarmManager.RTC_WAKEUP,System.currentTimeMillis()+timeDiff,caloriePendingIntent);
+        alarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,System.currentTimeMillis()+timeDiff,caloriePendingIntent);
 
         Log.i("Alarm info", "Alarm will triggered after : "+timeDiff/1000+"sec");
        // Toast.makeText(this, "Alarm will triggered after : "+alarmTime/1000+"sec", Toast.LENGTH_SHORT).show();
Index: app/src/main/java/com/example/infits/DataFromDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class DataFromDatabase {\r\n\r\n    //public static String ipConfig = \"http://192.168.247.110/infits/\";\r\n       public static String ipConfig = \"https://infits.in/androidApi/\";\r\n\r\n\r\n    public static boolean flag= false;\r\n    public static String profilePhoto=\"default.jpg\";\r\n    public static String dietitianuserID,clientuserID,password,name,email,mobile,location,age,gender,weight,plan,height,dietitian_id,client_id,dateandtime,verification;\r\n\r\n    public static Bitmap profile;\r\n    public static Bitmap dtPhoto;\r\n    public static String profilePhotoBase;\r\n    public static String macAddress;\r\n\r\n\r\n\r\n    public static boolean proUser = false;\r\n\r\n    public static String stepsStr = \"0\",stepsGoal= \"0\",waterStr= \"0\",waterGoal= \"0\",sleephrsStr= \"0\",\r\n            sleepminsStr= \"0\",sleepGoal= \"0\",weightStr= \"0\",weightGoal= \"0\",bmi = \"0\",bpm = \"0\",bpmUp = \"0\",bpmDown = \"0\";\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/DataFromDatabase.java b/app/src/main/java/com/example/infits/DataFromDatabase.java
--- a/app/src/main/java/com/example/infits/DataFromDatabase.java	
+++ b/app/src/main/java/com/example/infits/DataFromDatabase.java	
@@ -1,25 +1,6 @@
 package com.example.infits;
 
 import android.graphics.Bitmap;
-import android.util.Log;
-import android.widget.Toast;
-
-import androidx.annotation.Nullable;
-
-import com.android.volley.AuthFailureError;
-import com.android.volley.Request;
-import com.android.volley.RequestQueue;
-import com.android.volley.Response;
-import com.android.volley.VolleyError;
-import com.android.volley.toolbox.StringRequest;
-import com.android.volley.toolbox.Volley;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.util.HashMap;
-import java.util.Map;
 
 public class DataFromDatabase {
 
